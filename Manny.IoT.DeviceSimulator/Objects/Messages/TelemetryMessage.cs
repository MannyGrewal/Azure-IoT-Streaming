using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;

namespace Manny.IoT.DeviceSimulator
{
    /// <summary>
    /// This class defines the DTO for the telemetry message that is generated by the sensors
    /// </summary>
    public class TelemetryMessage : IMessage
    {

        #region Properties
        public Guid MessageId { get; private set; }
        public DateTime EmittedOn { get; private set; }
        public Sensor SensorDataHeader { get; set; }
        public string SpecialMessage { get; set; }
        public IList<TelemetryReading> Readings { get; set; }

        public bool IncludeSensorHeader = true;
        #endregion

        public TelemetryMessage()
        {
            MessageId = Guid.NewGuid();         
            //It may need to be converted to UtcNow for wider geo coverage
            EmittedOn = DateTime.Now.ToLocalTime();
        }
       

        public string JSONSerialisedMessage()
        {
            return JsonConvert.SerializeObject(this);
        }

        public override string ToString()
        {
            var sbMessage = new StringBuilder(IncludeSensorHeader? $"Sensor {SensorDataHeader.DeviceNumber} at {SensorDataHeader.Name} ->":string.Empty);
            foreach (var reading in Readings)
            {
                sbMessage.Append(reading.ToString());
            }
            return sbMessage.ToString();
        }
    }

    
}
